{
  "_args": [
    [
      {
        "raw": "properties-reader@0.0.10",
        "scope": null,
        "escapedName": "properties-reader",
        "name": "properties-reader",
        "rawSpec": "0.0.10",
        "spec": "0.0.10",
        "type": "version"
      },
      "C:\\Users\\j\\Documents\\mobile apps\\final_project\\Part 3\\movieApp\\node_modules\\cordova-jquery"
    ]
  ],
  "_from": "properties-reader@0.0.10",
  "_id": "properties-reader@0.0.10",
  "_inCache": true,
  "_location": "/properties-reader",
  "_npmUser": {
    "name": "steveukx",
    "email": "steve@mydev.co"
  },
  "_npmVersion": "1.4.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "properties-reader@0.0.10",
    "scope": null,
    "escapedName": "properties-reader",
    "name": "properties-reader",
    "rawSpec": "0.0.10",
    "spec": "0.0.10",
    "type": "version"
  },
  "_requiredBy": [
    "/cordova-jquery"
  ],
  "_resolved": "https://registry.npmjs.org/properties-reader/-/properties-reader-0.0.10.tgz",
  "_shasum": "adb3a765ad7f82e451fcfa525e2cf9b3da043d10",
  "_shrinkwrap": null,
  "_spec": "properties-reader@0.0.10",
  "_where": "C:\\Users\\j\\Documents\\mobile apps\\final_project\\Part 3\\movieApp\\node_modules\\cordova-jquery",
  "author": {
    "name": "Steve King",
    "email": "steve@mydev.co"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/steveukx/properties/issues"
  },
  "contributors": [
    {
      "name": "Steve King",
      "email": "steve@mydev.co"
    }
  ],
  "dependencies": {
    "mkdirp": "~0.3.5"
  },
  "description": "Properties file reader for Node.js",
  "devDependencies": {
    "unit-test": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "adb3a765ad7f82e451fcfa525e2cf9b3da043d10",
    "tarball": "https://registry.npmjs.org/properties-reader/-/properties-reader-0.0.10.tgz"
  },
  "engines": {
    "node": ">= 0.4.1"
  },
  "gitHead": "4b074a4a2a368e6b597c6cd634dc6321020772e6",
  "homepage": "https://github.com/steveukx/properties#readme",
  "keywords": [
    "properties",
    "ini",
    "parser"
  ],
  "license": "MIT",
  "main": "src/PropertiesReader",
  "maintainers": [
    {
      "name": "steveukx",
      "email": "steve@mydev.co"
    }
  ],
  "name": "properties-reader",
  "optionalDependencies": {},
  "readme": "Properties-Reader\n=================\n\nAn ini file compatible properties reader for [Node.JS](http://nodejs.org)\n\nInstallation\n============\n\nThe easiest installation is through [NPM](http://npmjs.org):\n\n    npm install properties-reader\n\nOr clone the repo https://github.com/steveukx/properties and include the `/src/PropertiesReader.js` script.\n\nAPI\n===\n\nRead properties from a file:\n\n    var PropertiesReader = require('properties-reader');\n    var properties = PropertiesReader('/path/to/properties.file');\n\nThe properties are then accessible either by fully qualified name, or if the property names are in dot-delimited\nnotation, they can be access as an object:\n\n    // fully qualified name\n    var property = properties.get('some.property.name');\n\n    // by object path\n    var property = properties.path().some.property.name;\n\nTo read more than one file, chain calls to the `.read()` method:\n\n    properties.read('/another.file').read('/yet/another.file');\n\nTo set an arbitrary property into the properties object, use `.set()`:\n\n    properties.set('property.name', 'Property Value');\n\nWhen reading a `.ini` file, sections are created by having a line that contains just a section name in square\nbrackets. The section name is then prefixed to all property names that follow it until another section name is found\nto replace the current section.\n\n    # contents of properties file\n    [main]\n    some.thing = foo\n\n    [blah]\n    some.thing = bar\n\n    // reading these back from the properties reader\n    properties.get('main.some.thing') == 'foo';\n    properties.get('blah.some.thing') == 'bar';\n\nChecking for the current number of properties that have been read into the reader:\n\n    var propertiesCount = properties.length;\n\nThe length is calculated on request, so if accessing this in a loop an efficiency would be achieved by caching the\nvalue.\n\nWhen duplicate names are found in the properties, the first one read will be replaced with the later one.\n\nData Types\n==========\n\nProperties will automatically be converted to their regular data types when they represent true/false or numeric\nvalues. To get the original value without any parsing / type coercion applied, use `properties.getRaw('path.to.prop')`.\n\nContributions\n=============\n\nIf you find bugs or want to change functionality, feel free to fork and pull request.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/steveukx/properties.git"
  },
  "scripts": {
    "test": "node test/runner.js"
  },
  "version": "0.0.10"
}
