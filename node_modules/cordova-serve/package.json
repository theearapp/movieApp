{
  "_args": [
    [
      {
        "raw": "cordova-serve@^3.0.0",
        "scope": null,
        "escapedName": "cordova-serve",
        "name": "cordova-serve",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "C:\\Users\\j\\Documents\\mobile apps\\final_project\\Part 3\\movieApp\\node_modules\\cordova-browser"
    ]
  ],
  "_from": "cordova-serve@^3.0.0",
  "_hasShrinkwrap": false,
  "_id": "cordova-serve@3.0.0",
  "_integrity": "",
  "_location": "/cordova-serve",
  "_nodeVersion": "8.14.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cordova-serve_3.0.0_1545714558894_0.8466756511402349"
  },
  "_npmUser": {
    "name": "erisu",
    "email": "erisu.dev@outlook.jp"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cordova-serve@^3.0.0",
    "scope": null,
    "escapedName": "cordova-serve",
    "name": "cordova-serve",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/cordova-browser"
  ],
  "_resolved": "https://registry.npmjs.org/cordova-serve/-/cordova-serve-3.0.0.tgz",
  "_shasum": "974d695f75a9f2b3e487604be6f539a39dba8390",
  "_shrinkwrap": null,
  "_spec": "cordova-serve@^3.0.0",
  "_where": "C:\\Users\\j\\Documents\\mobile apps\\final_project\\Part 3\\movieApp\\node_modules\\cordova-browser",
  "author": {
    "name": "Apache Software Foundation"
  },
  "bugs": {
    "url": "https://issues.apache.org/jira/browse/CB",
    "email": "dev@cordova.apache.org"
  },
  "dependencies": {
    "chalk": "^2.4.1",
    "compression": "^1.6.0",
    "express": "^4.13.3",
    "opn": "^5.3.0",
    "which": "^1.3.0"
  },
  "description": "Apache Cordova server support for cordova-lib and cordova-browser.",
  "devDependencies": {
    "eslint": "^5.0.0",
    "eslint-config-semistandard": "^13.0.0",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-node": "^8.0.0",
    "eslint-plugin-promise": "^4.0.0",
    "eslint-plugin-standard": "^4.0.0",
    "jasmine": "^3.3.0",
    "rewire": "^4.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-h479g/5a0PXn//yiFuMrD5MDEbB+mtihNkWcE6uD/aCh/6z0FRZ9sWH3NfZbHDB+Bp1yGLYsjbH8LZBL8KOQ0w==",
    "shasum": "974d695f75a9f2b3e487604be6f539a39dba8390",
    "tarball": "https://registry.npmjs.org/cordova-serve/-/cordova-serve-3.0.0.tgz",
    "fileCount": 23,
    "unpackedSize": 54698,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcIbt/CRA9TVsSAnZWagAAMdMQAI9e3oQjhA7NC1Zr4i7u\nsL7Xzqmy24pOFuJ5wZzRn6qAvpv3xXOVbWAvBh874effzw4zPG/tO10EFU1e\nxoO27WwykKwvstOLqEPQJhB9Kkc3uDZ4wBZE9d6+MbjR+h1h10JAqvwdr6p6\nJ52/2WsZRfgMWIBCbTJSxOZOu7b5E+mEw9Vx9NFQfE5XUuGSrv3SmI7zcPsW\n/j1zMJXJhvTYaKrgTaHm4e11Cb2fdcUpsRNr+CusK9edOvLJPpBHvJnrSFNw\nWhG0Uy3h5mjXxmxKzWnC0p1WY7x2aINvN8vnWozjGjXTFYJL+jnvw52G/5gp\nnXqdcjJTR9G3e7Lz56o+Z0ueyvOXgQecQS1WCN4M6htTYGEry11qI+GrDFub\nB0DD99aIS7ljeUJeEb3XWnsJ/XZZ/Wh3ysFrhmxPdL2a2LvTjSVcCkJIZKMj\nhHJ2MbxXS8916iAr9GJhxEx4FoWS+FBN47N4u+YA0yT7wzZvzZTellUmfmW8\n+ObeC/L6N3pVM698yixXpimkkfqj2GOdhYd/nSyLfecGr2H81wTDvzB+oNEH\nZ64ACNJevt1ZxmF6fA/+tWqCnafVdZJ5fKj88PEzbJ/bwtQnymLrJdPeEV5z\n0ND7KEUHpZaXZGeoJqJKAkbBDeWrpAQQbdSZBJC+2gDiYEAEEF+OQmSXK9gQ\n4QwE\r\n=PwVP\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6",
    "npm": ">= 3"
  },
  "homepage": "https://github.com/apache/cordova-serve#readme",
  "keywords": [
    "cordova",
    "server",
    "apache"
  ],
  "license": "Apache-2.0",
  "main": "src/main.js",
  "maintainers": [
    {
      "name": "anis",
      "email": "anis.kadri@gmail.com"
    },
    {
      "name": "bowserj",
      "email": "bowserj@apache.org"
    },
    {
      "name": "brodybits",
      "email": "chris.brody@gmail.com"
    },
    {
      "name": "cordovaowner",
      "email": "apachecordovabot@gmail.com"
    },
    {
      "name": "dpogue",
      "email": "darryl@dpogue.ca"
    },
    {
      "name": "erisu",
      "email": "erisu.dev@outlook.jp"
    },
    {
      "name": "filmaj",
      "email": "maj.fil@gmail.com"
    },
    {
      "name": "purplecabbage",
      "email": "purplecabbage@gmail.com"
    },
    {
      "name": "shazron",
      "email": "shazron@gmail.com"
    },
    {
      "name": "stevegill",
      "email": "stevengill97@gmail.com"
    },
    {
      "name": "surajpindoria",
      "email": "suraj.pindoria@yahoo.com"
    },
    {
      "name": "timbarham",
      "email": "npmjs@barhams.info"
    }
  ],
  "name": "cordova-serve",
  "optionalDependencies": {},
  "readme": "<!--\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n-->\n\n[![Build status](https://ci.appveyor.com/api/projects/status/ewv1mhbvms0bfm26?svg=true)](https://ci.appveyor.com/project/ApacheSoftwareFoundation/cordova-serve/branch/master)\n[![Build Status](https://travis-ci.org/apache/cordova-serve.svg?branch=master)](https://travis-ci.org/apache/cordova-serve)\n[![NPM](https://nodei.co/npm/cordova-serve.png)](https://nodei.co/npm/cordova-serve/)\n\n# cordova-serve\nThis module can be used to serve up a Cordova application in the browser. It has no command-line, but rather is intended\nto be called using the following API:\n\n``` js\nvar cordovaServe = require('cordova-serve')();\ncordovaServe.launchServer(opts);\ncordovaServe.servePlatform(platform, opts);\ncordovaServe.launchBrowser(ops);\n```\n\n## launchServer()\n\n``` js\nvar cordovaServe = require('cordova-serve')();\ncordovaServe.launchServer(opts).then(function () {\n    var server = cordovaServe.server;\n    var root = cordovaServe.root;\n    var port = cordovaServe.port;\n\n    ...\n}, function (error) {\n    console.log('An error occurred: ' + error);\n});\n```\n\nLaunches a server with the specified options. Parameters:\n\n* **opts**: Options, as described below.\n\nReturns a promise that is fulfilled once the server has launched, or rejected if the server fails to launch. Once the\npromise is fulfilled, the following properties are available on the `cordovaServe` object:\n \n * **cordovaServe.serve**: The Node http.Server instance.\n * **cordovaServe.root**: The root that was specified, or cwd if none specified.\n * **cordovaServe.port**: The port that was used (could be the requested port, the default port, or some incremented\n   value if the chosen port was in use).\n\n## servePlatform()\n\n``` js\nvar cordovaServe = require('cordova-serve')();\ncordovaServe.servePlatform(platform, opts).then(function () {\n    var server = cordovaServe.server;\n    var port = cordovaServe.port;\n    var projectRoot = cordovaServe.projectRoot;\n    var platformRoot = cordovaServe.root;\n\n    ...\n}, function (error) {\n    console.log('An error occurred: ' + error);\n});\n```\n\nLaunches a server that serves up any Cordova platform (e.g. `browser`, `android` etc) from the current project.\nParameters:\n\n* **opts**: Options, as described below. Note that for `servePlatform()`, the `root` value should be a Cordova project's\n  root folder, or any folder within it - `servePlatform()` will replace it with the platform's `www_dir` folder. If this\n  value is not specified, the *cwd* will be used.\n\nReturns a promise that is fulfilled once the server has launched, or rejected if the server fails to launch. Once the\npromise is fulfilled, the following properties are available on the `cordovaServe` object:\n \n * **cordovaServe.serve**: The Node http.Server instance.\n * **cordovaServe.root**: The requested platform's `www` folder.\n * **cordovaServe.projectRoot**: The root folder of the Cordova project.\n * **cordovaServe.port**: The port that was used (could be the requested port, the default port, or some incremented\n   value if the chosen port was in use).\n\n## launchBrowser()\n\n``` js\nvar cordovaServe = require('cordova-serve')();\ncordovaServe.launchBrowser(opts).then(function (stdout) {\n    console.log('Browser was launched successfully: ' + stdout);\n}, function (error) {\n    console.log('An error occurred: ' + error);\n});\n```\n\nLaunches a browser window pointing to the specified URL. The single parameter is an options object that supports the\nfollowing values (both optional):\n\n* **url**: The URL to open in the browser.\n* **target**: The name of the browser to launch. Can be any of the following: `chrome`, `chromium`, `firefox`, `ie`,\n  `opera`, `safari`. Defaults to `chrome` if no browser is specified.\n\nReturns a promise that is fulfilled once the browser has been launched, or rejected if an error occurs.\n\n## The *opts* Options Object\nThe opts object passed to `launchServer()` and `servePlatform()` supports the following values (all optional):\n\n* **root**: The file path on the local file system that is used as the root for the server, for default mapping of URL\n  path to local file system path.   \n* **port**: The port for the server. Note that if this port is already in use, it will be incremented until a free port\n  is found.\n* **router**: An `ExpressJS` router. If provided, this will be attached *before* default static handling.\n* **noLogOutput**: If `true`, turns off all log output. \n* **noServerInfo**: If `true`, cordova-serve won't output `Static file server running on...` message.\n* **events**: An `EventEmitter` to use for logging. If provided, logging will be output using `events.emit('log', msg)`.\n  If not provided, `console.log()` will be used. Note that nothing will be output in either case if `noLogOutput` is `true`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apache/cordova-serve.git"
  },
  "scripts": {
    "eslint": "node node_modules/eslint/bin/eslint ./src",
    "jasmine": "jasmine JASMINE_CONFIG_PATH=spec/jasmine.json",
    "test": "npm run eslint && npm run jasmine"
  },
  "version": "3.0.0"
}
